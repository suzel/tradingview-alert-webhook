//-----------------------------------------------------------------------------

//@version=4
// study(title="Lesson 6", shorttitle="RSI Swing Signals", overlay=true)

// // Get user input
// rsiSource = input(title="RSI Source", type=input.source, defval=close)
// rsiLength = input(title="RSI Length", type=input.integer, defval=14)
// rsiOverbought = input(title="RSI Overbought Level", type=input.integer, defval=70)
// rsiOversold = input(title="RSI Oversold Level", type=input.integer, defval=30)

// // Get RSI value
// rsiValue = rsi(rsiSource, rsiLength)
// rsiOB = rsiValue >= rsiOverbought
// rsiOS = rsiValue <= rsiOversold

// // Identify engulfing candles
// bullishEC = close > open[1] and close[1] < open[1]
// bearishEC = close < open[1] and close[1] > open[1]
// tradeSignal = ((rsiOS or rsiOS[1]) and bullishEC) or ((rsiOB or rsiOB[1]) and bearishEC)

// // Plot signals to chart
// plotshape(tradeSignal and bullishEC, title="Long", location=location.belowbar, color=color.green, transp=0, style=shape.triangleup, text="Long")
// plotshape(tradeSignal and bearishEC, title="Short", location=location.abovebar, color=color.red, transp=0, style=shape.triangledown, text="Short")

// // Send out an alert if this candle meets our conditions
// alertcondition(tradeSignal, title="RSI Trade Alert!", message="RSI Swing Signal for XXX")


//-----------------------------------------------------------------------------

//@version=4
// strategy("Take profits & stop losses", overlay=true)

// // Create Indicator's
// shortSMA = sma(close, 10)
// longSMA = sma(close, 30)
// rsi = rsi(close, 14)
// atr = atr(14)

// // Specify crossover conditions
// longCondition = crossover(shortSMA, longSMA)
// shortCondition = crossunder(shortSMA, longSMA)

// // Execute trade if condition is True
// if (longCondition)
//     stopLoss = low - atr * 2
//     takeProfit = high + atr * 2
//     strategy.entry("long", strategy.long, 100, when = rsi > 50)
//     strategy.exit("exit", "long", stop=stopLoss, limit=takeProfit)

// if (shortCondition)
//     stopLoss = high + atr * 2
//     takeProfit = low - atr * 2
//     strategy.entry("short", strategy.short, 100, when = rsi < 50)
//     strategy.exit("exit", "short", stop=stopLoss, limit=takeProfit)

// // Plot Moving Average's to chart
// plot(shortSMA)
// plot(longSMA, color=color.black)
